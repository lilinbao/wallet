/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'boyce.li' at '4/20/16 4:06 PM' with Gradle 2.12
 *
 * This generated file contains a commented-out sample Android project to get you started.
 * For more details take a look at the Android Quickstart chapter in the Gradle
 * user guide available at https://spring.io/guides/gs/gradle-android/
 */
/*
// Apply the Android plugin to add support for Android
apply plugin: 'com.android.application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.18'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.3'
    }
}

apply plugin: 'com.android.application'
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
def packageTime() {
    return new Date().format("yyyy-MM-dd-HHmmss", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 21
    buildToolsVersion "22.0.1"
	defaultConfig {
		applicationId "cn.homecreditcfc.fudai"
        minSdkVersion 8
        targetSdkVersion 17
		versionCode 1
		versionName "1.0"
    }
	signingConfigs{
		releaseConfig{
			storeFile file("fudai.keystore")
			storePassword System.console().readLine("Store Key Password")
			keyPassword System.console().readLine("Key Password")
			keyAlias "FuDaiKeyStore"
		}
	}
	buildTypes{
		release{
			minifyEnabled true
			signingConfig signingConfigs.releaseConfig
			buildConfigField("boolean", "CACHE_ENABLED", "true")
			buildConfigField("String", "APP_CACAHE_DIRNAME", "\"webcache\"")
			buildConfigField("boolean", "DATABASE_ENABLED", "true")
			buildConfigField("boolean", "JAVASCRIPT_ENABLED", "true")
			buildConfigField("int", "WEB_VIEW_BACKGROUND_COLOR", "2558190")
			buildConfigField("String", "END_POINT_URL", "\"http://www.homecreditcfc.cn/fudai/index.php?lang=cn&utm_source=AndroidAPP&utm_campaign=MCL&utm_content=version${defaultConfig.versionCode}\"")
		}
		debug {
            debuggable true
            buildConfigField("boolean", "CACHE_ENABLED", "false")
			buildConfigField("String", "APP_CACAHE_DIRNAME", "\"debugcache\"")
			buildConfigField("boolean", "DATABASE_ENABLED", "true")
			buildConfigField("boolean", "JAVASCRIPT_ENABLED", "true")
			buildConfigField("int", "WEB_VIEW_BACKGROUND_COLOR", "2558190")
			buildConfigField("String", "END_POINT_URL", "\"http://hc-cn-mcl.utdigit.com/fudai/index.php?lang=cn\"")
        }
	}
	productFlavors {
        wandoujia {}
        _360 {}
        baidu {}
        xiaomi {}
        tencent {}
        huawei {}
        androidMarket {}
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
	sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
		}
	}
	applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                File outputDirectory = new File(outputFile.parent);
                def fileName
                if (variant.buildType.name == "release") {
                    fileName =  "app_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                } else {
                    fileName = "app_v${defaultConfig.versionName}_${packageTime()}_debug.apk"
                }
                output.outputFile = new File(outputDirectory, fileName)
            }
        }
    }
    lintOptions { 
    	abortOnError false
	}
}
repositories {
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}
